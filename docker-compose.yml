services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - server
      - minio
      - frontend

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq_data:/var/lib/rabbitmq/

  minio:
    image: minio/minio
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ./minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --address ":9000" --console-address ":9001"

  postgres:
    image: postgres:13
    hostname: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db

  server:
    build: ./server
    volumes:
      - ./server:/app
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    depends_on:
      - rabbitmq
      - postgres

  mlworker:
    build: ./mlWorker
    volumes:
      - ./mlWorker:/app
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      YANDEX_IAM_TOKEN: YANDEX_IAM_TOKEN
      YANDEX_OAUTH_TOKEN: YANDEX_OAUTH_TOKEN
      YANDEX_FOLDER_ID: YANDEX_FOLDER_ID
    depends_on:
      - rabbitmq
      - postgres
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  frontend:
    build:
      context: ./frontend
      dockerfile: .docker/Dockerfile_production
    ports:
      - 8080:80
